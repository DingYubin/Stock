// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package ruifusoft.protocol;

public final class Common {
  private Common() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code ruifusoft.protocol.Status}
   */
  public enum Status
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SUCCESS = 0;</code>
     */
    SUCCESS(0, 0),
    /**
     * <code>FAILED = 1;</code>
     */
    FAILED(1, 1),
    /**
     * <code>INVALID_REQUEST = 2;</code>
     */
    INVALID_REQUEST(2, 2),
    /**
     * <code>SESSION_FAILED = 3;</code>
     */
    SESSION_FAILED(3, 3),
    /**
     * <code>DB_CONNECTION_FAILED = 4;</code>
     */
    DB_CONNECTION_FAILED(4, 4),
    /**
     * <code>INTERNAL_ERROR = 5;</code>
     */
    INTERNAL_ERROR(5, 5),
    /**
     * <code>USER_CREATE_DUPLICATED = 10001;</code>
     *
     * <pre>
     * User 10001~19999
     * </pre>
     */
    USER_CREATE_DUPLICATED(6, 10001),
    /**
     * <code>USER_PASSWORD_INCORRECT = 10002;</code>
     */
    USER_PASSWORD_INCORRECT(7, 10002),
    /**
     * <code>USER_NOT_EXIST = 10003;</code>
     */
    USER_NOT_EXIST(8, 10003),
    /**
     * <code>USER_INVALID_THIRD_PARTY = 10004;</code>
     */
    USER_INVALID_THIRD_PARTY(9, 10004),
    /**
     * <code>USER_NOT_LOGIN = 10005;</code>
     */
    USER_NOT_LOGIN(10, 10005),
    /**
     * <code>TRADE_SERVER_OFFLINE = 30001;</code>
     *
     * <pre>
     * { Trade 30001~39999
     * </pre>
     */
    TRADE_SERVER_OFFLINE(11, 30001),
    /**
     * <code>TRADE_SERVER_INTERNAL_FAILED = 30002;</code>
     */
    TRADE_SERVER_INTERNAL_FAILED(12, 30002),
    /**
     * <code>TRADE_SERVER_INVALID_REPLY = 30003;</code>
     */
    TRADE_SERVER_INVALID_REPLY(13, 30003),
    /**
     * <code>TRADE_SERVER_SESSION_FAILED = 30004;</code>
     *
     * <pre>
     * Trade}
     * </pre>
     */
    TRADE_SERVER_SESSION_FAILED(14, 30004),
    ;

    /**
     * <code>SUCCESS = 0;</code>
     */
    public static final int SUCCESS_VALUE = 0;
    /**
     * <code>FAILED = 1;</code>
     */
    public static final int FAILED_VALUE = 1;
    /**
     * <code>INVALID_REQUEST = 2;</code>
     */
    public static final int INVALID_REQUEST_VALUE = 2;
    /**
     * <code>SESSION_FAILED = 3;</code>
     */
    public static final int SESSION_FAILED_VALUE = 3;
    /**
     * <code>DB_CONNECTION_FAILED = 4;</code>
     */
    public static final int DB_CONNECTION_FAILED_VALUE = 4;
    /**
     * <code>INTERNAL_ERROR = 5;</code>
     */
    public static final int INTERNAL_ERROR_VALUE = 5;
    /**
     * <code>USER_CREATE_DUPLICATED = 10001;</code>
     *
     * <pre>
     * User 10001~19999
     * </pre>
     */
    public static final int USER_CREATE_DUPLICATED_VALUE = 10001;
    /**
     * <code>USER_PASSWORD_INCORRECT = 10002;</code>
     */
    public static final int USER_PASSWORD_INCORRECT_VALUE = 10002;
    /**
     * <code>USER_NOT_EXIST = 10003;</code>
     */
    public static final int USER_NOT_EXIST_VALUE = 10003;
    /**
     * <code>USER_INVALID_THIRD_PARTY = 10004;</code>
     */
    public static final int USER_INVALID_THIRD_PARTY_VALUE = 10004;
    /**
     * <code>USER_NOT_LOGIN = 10005;</code>
     */
    public static final int USER_NOT_LOGIN_VALUE = 10005;
    /**
     * <code>TRADE_SERVER_OFFLINE = 30001;</code>
     *
     * <pre>
     * { Trade 30001~39999
     * </pre>
     */
    public static final int TRADE_SERVER_OFFLINE_VALUE = 30001;
    /**
     * <code>TRADE_SERVER_INTERNAL_FAILED = 30002;</code>
     */
    public static final int TRADE_SERVER_INTERNAL_FAILED_VALUE = 30002;
    /**
     * <code>TRADE_SERVER_INVALID_REPLY = 30003;</code>
     */
    public static final int TRADE_SERVER_INVALID_REPLY_VALUE = 30003;
    /**
     * <code>TRADE_SERVER_SESSION_FAILED = 30004;</code>
     *
     * <pre>
     * Trade}
     * </pre>
     */
    public static final int TRADE_SERVER_SESSION_FAILED_VALUE = 30004;


    public final int getNumber() { return value; }

    public static Status valueOf(int value) {
      switch (value) {
        case 0: return SUCCESS;
        case 1: return FAILED;
        case 2: return INVALID_REQUEST;
        case 3: return SESSION_FAILED;
        case 4: return DB_CONNECTION_FAILED;
        case 5: return INTERNAL_ERROR;
        case 10001: return USER_CREATE_DUPLICATED;
        case 10002: return USER_PASSWORD_INCORRECT;
        case 10003: return USER_NOT_EXIST;
        case 10004: return USER_INVALID_THIRD_PARTY;
        case 10005: return USER_NOT_LOGIN;
        case 30001: return TRADE_SERVER_OFFLINE;
        case 30002: return TRADE_SERVER_INTERNAL_FAILED;
        case 30003: return TRADE_SERVER_INVALID_REPLY;
        case 30004: return TRADE_SERVER_SESSION_FAILED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Status>() {
            public Status findValueByNumber(int number) {
              return Status.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Common.getDescriptor().getEnumTypes().get(0);
    }

    private static final Status[] VALUES = values();

    public static Status valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Status(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ruifusoft.protocol.Status)
  }

  /**
   * Protobuf enum {@code ruifusoft.protocol.DeviceType}
   */
  public enum DeviceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ANDROID = 1;</code>
     */
    ANDROID(0, 1),
    /**
     * <code>IOS = 2;</code>
     */
    IOS(1, 2),
    /**
     * <code>IOS_INHOUSE = 3;</code>
     */
    IOS_INHOUSE(2, 3),
    /**
     * <code>HTML5 = 4;</code>
     */
    HTML5(3, 4),
    /**
     * <code>WEB = 5;</code>
     */
    WEB(4, 5),
    /**
     * <code>OTHER_OS = 100;</code>
     */
    OTHER_OS(5, 100),
    ;

    /**
     * <code>ANDROID = 1;</code>
     */
    public static final int ANDROID_VALUE = 1;
    /**
     * <code>IOS = 2;</code>
     */
    public static final int IOS_VALUE = 2;
    /**
     * <code>IOS_INHOUSE = 3;</code>
     */
    public static final int IOS_INHOUSE_VALUE = 3;
    /**
     * <code>HTML5 = 4;</code>
     */
    public static final int HTML5_VALUE = 4;
    /**
     * <code>WEB = 5;</code>
     */
    public static final int WEB_VALUE = 5;
    /**
     * <code>OTHER_OS = 100;</code>
     */
    public static final int OTHER_OS_VALUE = 100;


    public final int getNumber() { return value; }

    public static DeviceType valueOf(int value) {
      switch (value) {
        case 1: return ANDROID;
        case 2: return IOS;
        case 3: return IOS_INHOUSE;
        case 4: return HTML5;
        case 5: return WEB;
        case 100: return OTHER_OS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DeviceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DeviceType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeviceType>() {
            public DeviceType findValueByNumber(int number) {
              return DeviceType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Common.getDescriptor().getEnumTypes().get(1);
    }

    private static final DeviceType[] VALUES = values();

    public static DeviceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DeviceType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ruifusoft.protocol.DeviceType)
  }

  /**
   * Protobuf enum {@code ruifusoft.protocol.Event}
   */
  public enum Event
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NULL_EVENT_REQ = 1;</code>
     */
    NULL_EVENT_REQ(0, 1),
    /**
     * <code>NULL_EVENT_RESP = 2;</code>
     */
    NULL_EVENT_RESP(1, 2),
    /**
     * <code>USER_REGISTER_REQ = 10001;</code>
     */
    USER_REGISTER_REQ(2, 10001),
    /**
     * <code>USER_REGISTER_RESP = 10002;</code>
     */
    USER_REGISTER_RESP(3, 10002),
    /**
     * <code>USER_ID_QUERY_REQ = 10003;</code>
     */
    USER_ID_QUERY_REQ(4, 10003),
    /**
     * <code>USER_ID_QUERY_RESP = 10004;</code>
     */
    USER_ID_QUERY_RESP(5, 10004),
    /**
     * <code>USER_LOGIN_REQ = 10005;</code>
     */
    USER_LOGIN_REQ(6, 10005),
    /**
     * <code>USER_LOGIN_RESP = 10006;</code>
     */
    USER_LOGIN_RESP(7, 10006),
    /**
     * <code>USER_BIND_REQ = 10007;</code>
     */
    USER_BIND_REQ(8, 10007),
    /**
     * <code>USER_BIND_RESP = 10008;</code>
     */
    USER_BIND_RESP(9, 10008),
    /**
     * <code>USER_QUERY_REQ = 10009;</code>
     */
    USER_QUERY_REQ(10, 10009),
    /**
     * <code>USER_QUERY_RESP = 10010;</code>
     */
    USER_QUERY_RESP(11, 10010),
    /**
     * <code>USER_UPDATE_REQ = 10011;</code>
     */
    USER_UPDATE_REQ(12, 10011),
    /**
     * <code>USER_UPDATE_RESP = 10012;</code>
     */
    USER_UPDATE_RESP(13, 10012),
    /**
     * <code>USER_THIRD_PARTY_LOGIN_REQ = 10013;</code>
     */
    USER_THIRD_PARTY_LOGIN_REQ(14, 10013),
    /**
     * <code>USER_THIRD_PARTY_LOGIN_RESP = 10014;</code>
     */
    USER_THIRD_PARTY_LOGIN_RESP(15, 10014),
    /**
     * <code>USER_SESSION_QUERY_REQ = 10015;</code>
     */
    USER_SESSION_QUERY_REQ(16, 10015),
    /**
     * <code>USER_SESSION_QUERY_RESP = 10016;</code>
     */
    USER_SESSION_QUERY_RESP(17, 10016),
    /**
     * <code>MARKET_SECU_STAT_REQ = 20001;</code>
     *
     * <pre>
     * 头部统计信息数据请求
     * </pre>
     */
    MARKET_SECU_STAT_REQ(18, 20001),
    /**
     * <code>MARKET_SECU_STAT_RESP = 20002;</code>
     *
     * <pre>
     * 头部统计信息数据响应
     * </pre>
     */
    MARKET_SECU_STAT_RESP(19, 20002),
    /**
     * <code>MARKET_SECU_TIMELINE_REQ = 20003;</code>
     *
     * <pre>
     * 分时图数据请求
     * </pre>
     */
    MARKET_SECU_TIMELINE_REQ(20, 20003),
    /**
     * <code>MARKET_SECU_TIMELINE_RESP = 20004;</code>
     *
     * <pre>
     * 分时图数据响应
     * </pre>
     */
    MARKET_SECU_TIMELINE_RESP(21, 20004),
    /**
     * <code>MARKET_SECU_KLINE_REQ = 20005;</code>
     *
     * <pre>
     * K线图数据请求
     * </pre>
     */
    MARKET_SECU_KLINE_REQ(22, 20005),
    /**
     * <code>MARKET_SECU_KLINE_RESP = 20006;</code>
     *
     * <pre>
     * K线图数据响应
     * </pre>
     */
    MARKET_SECU_KLINE_RESP(23, 20006),
    /**
     * <code>MARKET_SECU_ORDERBOOK_REQ = 20007;</code>
     *
     * <pre>
     * 买卖档数据请求
     * </pre>
     */
    MARKET_SECU_ORDERBOOK_REQ(24, 20007),
    /**
     * <code>MARKET_SECU_ORDERBOOK_RESP = 20008;</code>
     *
     * <pre>
     * 买卖档数据响应
     * </pre>
     */
    MARKET_SECU_ORDERBOOK_RESP(25, 20008),
    /**
     * <code>TRADE_USERLOGON_REQ = 30001;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_USERLOGON_REQ(26, 30001),
    /**
     * <code>TRADE_USERLOGON_RESP = 30002;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_USERLOGON_RESP(27, 30002),
    /**
     * <code>TRADE_USERLOGOUT_REQ = 30003;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_USERLOGOUT_REQ(28, 30003),
    /**
     * <code>TRADE_USERLOGOUT_RESP = 30004;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_USERLOGOUT_RESP(29, 30004),
    /**
     * <code>TRADE_QUERYACCOUNTDETAILS_REQ = 30005;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_QUERYACCOUNTDETAILS_REQ(30, 30005),
    /**
     * <code>TRADE_QUERYACCOUNTDETAILS_RESP = 30006;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_QUERYACCOUNTDETAILS_RESP(31, 30006),
    /**
     * <code>TRADE_QUERYACCOUNTBUYORDERINFO_REQ = 30007;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_QUERYACCOUNTBUYORDERINFO_REQ(32, 30007),
    /**
     * <code>TRADE_QUERYACCOUNTBUYORDERINFO_RESP = 30008;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_QUERYACCOUNTBUYORDERINFO_RESP(33, 30008),
    /**
     * <code>TRADE_QUERYACCOUNTCASHBALANCE_REQ = 30009;</code>
     *
     * <pre>
     * 查询帐户现金
     * </pre>
     */
    TRADE_QUERYACCOUNTCASHBALANCE_REQ(34, 30009),
    /**
     * <code>TRADE_QUERYACCOUNTCASHBALANCE_RESP = 30010;</code>
     */
    TRADE_QUERYACCOUNTCASHBALANCE_RESP(35, 30010),
    /**
     * <code>TRADE_QUERYACCOUNTSECURITIESBALANCE_REQ = 30011;</code>
     *
     * <pre>
     * 查询帐户持仓
     * </pre>
     */
    TRADE_QUERYACCOUNTSECURITIESBALANCE_REQ(36, 30011),
    /**
     * <code>TRADE_QUERYACCOUNTSECURITIESBALANCE_RESP = 30012;</code>
     */
    TRADE_QUERYACCOUNTSECURITIESBALANCE_RESP(37, 30012),
    /**
     * <code>TRADE_QUERYACCOUNTORDERHISTORY_REQ = 30013;</code>
     *
     * <pre>
     * 历史交易查询
     * </pre>
     */
    TRADE_QUERYACCOUNTORDERHISTORY_REQ(38, 30013),
    /**
     * <code>TRADE_QUERYACCOUNTORDERHISTORY_RESP = 30014;</code>
     */
    TRADE_QUERYACCOUNTORDERHISTORY_RESP(39, 30014),
    /**
     * <code>TRADE_QUERYACCOUNTORDEROVERVIEW_REQ = 30015;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_QUERYACCOUNTORDEROVERVIEW_REQ(40, 30015),
    /**
     * <code>TRADE_QUERYACCOUNTORDEROVERVIEW_RESP = 30016;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_QUERYACCOUNTORDEROVERVIEW_RESP(41, 30016),
    /**
     * <code>TRADE_QUERYACCOUNTTRADESUMMARY_REQ = 30017;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_QUERYACCOUNTTRADESUMMARY_REQ(42, 30017),
    /**
     * <code>TRADE_QUERYACCOUNTTRADESUMMARY_RESP = 30018;</code>
     */
    TRADE_QUERYACCOUNTTRADESUMMARY_RESP(43, 30018),
    /**
     * <code>TRADE_NEWORDER_REQ = 30019;</code>
     *
     * <pre>
     * 下单
     * </pre>
     */
    TRADE_NEWORDER_REQ(44, 30019),
    /**
     * <code>TRADE_NEWORDER_RESP = 30020;</code>
     *
     * <pre>
     * 下单
     * </pre>
     */
    TRADE_NEWORDER_RESP(45, 30020),
    /**
     * <code>TRADE_MODIFYORDER_REQ = 30021;</code>
     *
     * <pre>
     * 改单
     * </pre>
     */
    TRADE_MODIFYORDER_REQ(46, 30021),
    /**
     * <code>TRADE_MODIFYORDER_RESP = 30022;</code>
     *
     * <pre>
     * 改单
     * </pre>
     */
    TRADE_MODIFYORDER_RESP(47, 30022),
    /**
     * <code>TRADE_CANCELORDER_REQ = 30023;</code>
     *
     * <pre>
     * 撤单
     * </pre>
     */
    TRADE_CANCELORDER_REQ(48, 30023),
    /**
     * <code>TRADE_CANCELORDER_RESP = 30024;</code>
     *
     * <pre>
     * 撤单
     * </pre>
     */
    TRADE_CANCELORDER_RESP(49, 30024),
    /**
     * <code>TRADE_ORDEREXECUTION_REPT = 30025;</code>
     *
     * <pre>
     * 订单执行情况上报
     * </pre>
     */
    TRADE_ORDEREXECUTION_REPT(50, 30025),
    /**
     * <code>TRADE_QUERYEXECUTIONHISTORY_REQ = 30027;</code>
     *
     * <pre>
     * 查询订单详情
     * </pre>
     */
    TRADE_QUERYEXECUTIONHISTORY_REQ(51, 30027),
    /**
     * <code>TRADE_QUERYEXECUTIONHISTORY_RESP = 30028;</code>
     */
    TRADE_QUERYEXECUTIONHISTORY_RESP(52, 30028),
    /**
     * <code>TRADE_QUERYAVAILABLEEXPIRYDATE_REQ = 30029;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_QUERYAVAILABLEEXPIRYDATE_REQ(53, 30029),
    /**
     * <code>TRADE_QUERYAVAILABLEEXPIRYDATE_RESP = 30030;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_QUERYAVAILABLEEXPIRYDATE_RESP(54, 30030),
    /**
     * <code>TRADE_QUERYORDERCHARGES_REQ = 30031;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_QUERYORDERCHARGES_REQ(55, 30031),
    /**
     * <code>TRADE_QUERYORDERCHARGES_RESP = 30032;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_QUERYORDERCHARGES_RESP(56, 30032),
    /**
     * <code>TRADE_QUERYAVAILABLEORDERTYPE_REQ = 30033;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_QUERYAVAILABLEORDERTYPE_REQ(57, 30033),
    /**
     * <code>TRADE_QUERYAVAILABLEORDERTYPE_RESP = 30034;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_QUERYAVAILABLEORDERTYPE_RESP(58, 30034),
    /**
     * <code>TRADE_QUERYBUYORDERMAXQTY_REQ = 30035;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_QUERYBUYORDERMAXQTY_REQ(59, 30035),
    /**
     * <code>TRADE_QUERYBUYORDERMAXQTY_RESP = 30036;</code>
     *
     * <pre>
     * </pre>
     */
    TRADE_QUERYBUYORDERMAXQTY_RESP(60, 30036),
    /**
     * <code>TRADE_QUERYTRANSACTIONGROUPDATA_REQ = 30037;</code>
     */
    TRADE_QUERYTRANSACTIONGROUPDATA_REQ(61, 30037),
    /**
     * <code>TRADE_QUERYTRANSACTIONGROUPDATA_RESP = 30038;</code>
     */
    TRADE_QUERYTRANSACTIONGROUPDATA_RESP(62, 30038),
    ;

    /**
     * <code>NULL_EVENT_REQ = 1;</code>
     */
    public static final int NULL_EVENT_REQ_VALUE = 1;
    /**
     * <code>NULL_EVENT_RESP = 2;</code>
     */
    public static final int NULL_EVENT_RESP_VALUE = 2;
    /**
     * <code>USER_REGISTER_REQ = 10001;</code>
     */
    public static final int USER_REGISTER_REQ_VALUE = 10001;
    /**
     * <code>USER_REGISTER_RESP = 10002;</code>
     */
    public static final int USER_REGISTER_RESP_VALUE = 10002;
    /**
     * <code>USER_ID_QUERY_REQ = 10003;</code>
     */
    public static final int USER_ID_QUERY_REQ_VALUE = 10003;
    /**
     * <code>USER_ID_QUERY_RESP = 10004;</code>
     */
    public static final int USER_ID_QUERY_RESP_VALUE = 10004;
    /**
     * <code>USER_LOGIN_REQ = 10005;</code>
     */
    public static final int USER_LOGIN_REQ_VALUE = 10005;
    /**
     * <code>USER_LOGIN_RESP = 10006;</code>
     */
    public static final int USER_LOGIN_RESP_VALUE = 10006;
    /**
     * <code>USER_BIND_REQ = 10007;</code>
     */
    public static final int USER_BIND_REQ_VALUE = 10007;
    /**
     * <code>USER_BIND_RESP = 10008;</code>
     */
    public static final int USER_BIND_RESP_VALUE = 10008;
    /**
     * <code>USER_QUERY_REQ = 10009;</code>
     */
    public static final int USER_QUERY_REQ_VALUE = 10009;
    /**
     * <code>USER_QUERY_RESP = 10010;</code>
     */
    public static final int USER_QUERY_RESP_VALUE = 10010;
    /**
     * <code>USER_UPDATE_REQ = 10011;</code>
     */
    public static final int USER_UPDATE_REQ_VALUE = 10011;
    /**
     * <code>USER_UPDATE_RESP = 10012;</code>
     */
    public static final int USER_UPDATE_RESP_VALUE = 10012;
    /**
     * <code>USER_THIRD_PARTY_LOGIN_REQ = 10013;</code>
     */
    public static final int USER_THIRD_PARTY_LOGIN_REQ_VALUE = 10013;
    /**
     * <code>USER_THIRD_PARTY_LOGIN_RESP = 10014;</code>
     */
    public static final int USER_THIRD_PARTY_LOGIN_RESP_VALUE = 10014;
    /**
     * <code>USER_SESSION_QUERY_REQ = 10015;</code>
     */
    public static final int USER_SESSION_QUERY_REQ_VALUE = 10015;
    /**
     * <code>USER_SESSION_QUERY_RESP = 10016;</code>
     */
    public static final int USER_SESSION_QUERY_RESP_VALUE = 10016;
    /**
     * <code>MARKET_SECU_STAT_REQ = 20001;</code>
     *
     * <pre>
     * 头部统计信息数据请求
     * </pre>
     */
    public static final int MARKET_SECU_STAT_REQ_VALUE = 20001;
    /**
     * <code>MARKET_SECU_STAT_RESP = 20002;</code>
     *
     * <pre>
     * 头部统计信息数据响应
     * </pre>
     */
    public static final int MARKET_SECU_STAT_RESP_VALUE = 20002;
    /**
     * <code>MARKET_SECU_TIMELINE_REQ = 20003;</code>
     *
     * <pre>
     * 分时图数据请求
     * </pre>
     */
    public static final int MARKET_SECU_TIMELINE_REQ_VALUE = 20003;
    /**
     * <code>MARKET_SECU_TIMELINE_RESP = 20004;</code>
     *
     * <pre>
     * 分时图数据响应
     * </pre>
     */
    public static final int MARKET_SECU_TIMELINE_RESP_VALUE = 20004;
    /**
     * <code>MARKET_SECU_KLINE_REQ = 20005;</code>
     *
     * <pre>
     * K线图数据请求
     * </pre>
     */
    public static final int MARKET_SECU_KLINE_REQ_VALUE = 20005;
    /**
     * <code>MARKET_SECU_KLINE_RESP = 20006;</code>
     *
     * <pre>
     * K线图数据响应
     * </pre>
     */
    public static final int MARKET_SECU_KLINE_RESP_VALUE = 20006;
    /**
     * <code>MARKET_SECU_ORDERBOOK_REQ = 20007;</code>
     *
     * <pre>
     * 买卖档数据请求
     * </pre>
     */
    public static final int MARKET_SECU_ORDERBOOK_REQ_VALUE = 20007;
    /**
     * <code>MARKET_SECU_ORDERBOOK_RESP = 20008;</code>
     *
     * <pre>
     * 买卖档数据响应
     * </pre>
     */
    public static final int MARKET_SECU_ORDERBOOK_RESP_VALUE = 20008;
    /**
     * <code>TRADE_USERLOGON_REQ = 30001;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_USERLOGON_REQ_VALUE = 30001;
    /**
     * <code>TRADE_USERLOGON_RESP = 30002;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_USERLOGON_RESP_VALUE = 30002;
    /**
     * <code>TRADE_USERLOGOUT_REQ = 30003;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_USERLOGOUT_REQ_VALUE = 30003;
    /**
     * <code>TRADE_USERLOGOUT_RESP = 30004;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_USERLOGOUT_RESP_VALUE = 30004;
    /**
     * <code>TRADE_QUERYACCOUNTDETAILS_REQ = 30005;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_QUERYACCOUNTDETAILS_REQ_VALUE = 30005;
    /**
     * <code>TRADE_QUERYACCOUNTDETAILS_RESP = 30006;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_QUERYACCOUNTDETAILS_RESP_VALUE = 30006;
    /**
     * <code>TRADE_QUERYACCOUNTBUYORDERINFO_REQ = 30007;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_QUERYACCOUNTBUYORDERINFO_REQ_VALUE = 30007;
    /**
     * <code>TRADE_QUERYACCOUNTBUYORDERINFO_RESP = 30008;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_QUERYACCOUNTBUYORDERINFO_RESP_VALUE = 30008;
    /**
     * <code>TRADE_QUERYACCOUNTCASHBALANCE_REQ = 30009;</code>
     *
     * <pre>
     * 查询帐户现金
     * </pre>
     */
    public static final int TRADE_QUERYACCOUNTCASHBALANCE_REQ_VALUE = 30009;
    /**
     * <code>TRADE_QUERYACCOUNTCASHBALANCE_RESP = 30010;</code>
     */
    public static final int TRADE_QUERYACCOUNTCASHBALANCE_RESP_VALUE = 30010;
    /**
     * <code>TRADE_QUERYACCOUNTSECURITIESBALANCE_REQ = 30011;</code>
     *
     * <pre>
     * 查询帐户持仓
     * </pre>
     */
    public static final int TRADE_QUERYACCOUNTSECURITIESBALANCE_REQ_VALUE = 30011;
    /**
     * <code>TRADE_QUERYACCOUNTSECURITIESBALANCE_RESP = 30012;</code>
     */
    public static final int TRADE_QUERYACCOUNTSECURITIESBALANCE_RESP_VALUE = 30012;
    /**
     * <code>TRADE_QUERYACCOUNTORDERHISTORY_REQ = 30013;</code>
     *
     * <pre>
     * 历史交易查询
     * </pre>
     */
    public static final int TRADE_QUERYACCOUNTORDERHISTORY_REQ_VALUE = 30013;
    /**
     * <code>TRADE_QUERYACCOUNTORDERHISTORY_RESP = 30014;</code>
     */
    public static final int TRADE_QUERYACCOUNTORDERHISTORY_RESP_VALUE = 30014;
    /**
     * <code>TRADE_QUERYACCOUNTORDEROVERVIEW_REQ = 30015;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_QUERYACCOUNTORDEROVERVIEW_REQ_VALUE = 30015;
    /**
     * <code>TRADE_QUERYACCOUNTORDEROVERVIEW_RESP = 30016;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_QUERYACCOUNTORDEROVERVIEW_RESP_VALUE = 30016;
    /**
     * <code>TRADE_QUERYACCOUNTTRADESUMMARY_REQ = 30017;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_QUERYACCOUNTTRADESUMMARY_REQ_VALUE = 30017;
    /**
     * <code>TRADE_QUERYACCOUNTTRADESUMMARY_RESP = 30018;</code>
     */
    public static final int TRADE_QUERYACCOUNTTRADESUMMARY_RESP_VALUE = 30018;
    /**
     * <code>TRADE_NEWORDER_REQ = 30019;</code>
     *
     * <pre>
     * 下单
     * </pre>
     */
    public static final int TRADE_NEWORDER_REQ_VALUE = 30019;
    /**
     * <code>TRADE_NEWORDER_RESP = 30020;</code>
     *
     * <pre>
     * 下单
     * </pre>
     */
    public static final int TRADE_NEWORDER_RESP_VALUE = 30020;
    /**
     * <code>TRADE_MODIFYORDER_REQ = 30021;</code>
     *
     * <pre>
     * 改单
     * </pre>
     */
    public static final int TRADE_MODIFYORDER_REQ_VALUE = 30021;
    /**
     * <code>TRADE_MODIFYORDER_RESP = 30022;</code>
     *
     * <pre>
     * 改单
     * </pre>
     */
    public static final int TRADE_MODIFYORDER_RESP_VALUE = 30022;
    /**
     * <code>TRADE_CANCELORDER_REQ = 30023;</code>
     *
     * <pre>
     * 撤单
     * </pre>
     */
    public static final int TRADE_CANCELORDER_REQ_VALUE = 30023;
    /**
     * <code>TRADE_CANCELORDER_RESP = 30024;</code>
     *
     * <pre>
     * 撤单
     * </pre>
     */
    public static final int TRADE_CANCELORDER_RESP_VALUE = 30024;
    /**
     * <code>TRADE_ORDEREXECUTION_REPT = 30025;</code>
     *
     * <pre>
     * 订单执行情况上报
     * </pre>
     */
    public static final int TRADE_ORDEREXECUTION_REPT_VALUE = 30025;
    /**
     * <code>TRADE_QUERYEXECUTIONHISTORY_REQ = 30027;</code>
     *
     * <pre>
     * 查询订单详情
     * </pre>
     */
    public static final int TRADE_QUERYEXECUTIONHISTORY_REQ_VALUE = 30027;
    /**
     * <code>TRADE_QUERYEXECUTIONHISTORY_RESP = 30028;</code>
     */
    public static final int TRADE_QUERYEXECUTIONHISTORY_RESP_VALUE = 30028;
    /**
     * <code>TRADE_QUERYAVAILABLEEXPIRYDATE_REQ = 30029;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_QUERYAVAILABLEEXPIRYDATE_REQ_VALUE = 30029;
    /**
     * <code>TRADE_QUERYAVAILABLEEXPIRYDATE_RESP = 30030;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_QUERYAVAILABLEEXPIRYDATE_RESP_VALUE = 30030;
    /**
     * <code>TRADE_QUERYORDERCHARGES_REQ = 30031;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_QUERYORDERCHARGES_REQ_VALUE = 30031;
    /**
     * <code>TRADE_QUERYORDERCHARGES_RESP = 30032;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_QUERYORDERCHARGES_RESP_VALUE = 30032;
    /**
     * <code>TRADE_QUERYAVAILABLEORDERTYPE_REQ = 30033;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_QUERYAVAILABLEORDERTYPE_REQ_VALUE = 30033;
    /**
     * <code>TRADE_QUERYAVAILABLEORDERTYPE_RESP = 30034;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_QUERYAVAILABLEORDERTYPE_RESP_VALUE = 30034;
    /**
     * <code>TRADE_QUERYBUYORDERMAXQTY_REQ = 30035;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_QUERYBUYORDERMAXQTY_REQ_VALUE = 30035;
    /**
     * <code>TRADE_QUERYBUYORDERMAXQTY_RESP = 30036;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int TRADE_QUERYBUYORDERMAXQTY_RESP_VALUE = 30036;
    /**
     * <code>TRADE_QUERYTRANSACTIONGROUPDATA_REQ = 30037;</code>
     */
    public static final int TRADE_QUERYTRANSACTIONGROUPDATA_REQ_VALUE = 30037;
    /**
     * <code>TRADE_QUERYTRANSACTIONGROUPDATA_RESP = 30038;</code>
     */
    public static final int TRADE_QUERYTRANSACTIONGROUPDATA_RESP_VALUE = 30038;


    public final int getNumber() { return value; }

    public static Event valueOf(int value) {
      switch (value) {
        case 1: return NULL_EVENT_REQ;
        case 2: return NULL_EVENT_RESP;
        case 10001: return USER_REGISTER_REQ;
        case 10002: return USER_REGISTER_RESP;
        case 10003: return USER_ID_QUERY_REQ;
        case 10004: return USER_ID_QUERY_RESP;
        case 10005: return USER_LOGIN_REQ;
        case 10006: return USER_LOGIN_RESP;
        case 10007: return USER_BIND_REQ;
        case 10008: return USER_BIND_RESP;
        case 10009: return USER_QUERY_REQ;
        case 10010: return USER_QUERY_RESP;
        case 10011: return USER_UPDATE_REQ;
        case 10012: return USER_UPDATE_RESP;
        case 10013: return USER_THIRD_PARTY_LOGIN_REQ;
        case 10014: return USER_THIRD_PARTY_LOGIN_RESP;
        case 10015: return USER_SESSION_QUERY_REQ;
        case 10016: return USER_SESSION_QUERY_RESP;
        case 20001: return MARKET_SECU_STAT_REQ;
        case 20002: return MARKET_SECU_STAT_RESP;
        case 20003: return MARKET_SECU_TIMELINE_REQ;
        case 20004: return MARKET_SECU_TIMELINE_RESP;
        case 20005: return MARKET_SECU_KLINE_REQ;
        case 20006: return MARKET_SECU_KLINE_RESP;
        case 20007: return MARKET_SECU_ORDERBOOK_REQ;
        case 20008: return MARKET_SECU_ORDERBOOK_RESP;
        case 30001: return TRADE_USERLOGON_REQ;
        case 30002: return TRADE_USERLOGON_RESP;
        case 30003: return TRADE_USERLOGOUT_REQ;
        case 30004: return TRADE_USERLOGOUT_RESP;
        case 30005: return TRADE_QUERYACCOUNTDETAILS_REQ;
        case 30006: return TRADE_QUERYACCOUNTDETAILS_RESP;
        case 30007: return TRADE_QUERYACCOUNTBUYORDERINFO_REQ;
        case 30008: return TRADE_QUERYACCOUNTBUYORDERINFO_RESP;
        case 30009: return TRADE_QUERYACCOUNTCASHBALANCE_REQ;
        case 30010: return TRADE_QUERYACCOUNTCASHBALANCE_RESP;
        case 30011: return TRADE_QUERYACCOUNTSECURITIESBALANCE_REQ;
        case 30012: return TRADE_QUERYACCOUNTSECURITIESBALANCE_RESP;
        case 30013: return TRADE_QUERYACCOUNTORDERHISTORY_REQ;
        case 30014: return TRADE_QUERYACCOUNTORDERHISTORY_RESP;
        case 30015: return TRADE_QUERYACCOUNTORDEROVERVIEW_REQ;
        case 30016: return TRADE_QUERYACCOUNTORDEROVERVIEW_RESP;
        case 30017: return TRADE_QUERYACCOUNTTRADESUMMARY_REQ;
        case 30018: return TRADE_QUERYACCOUNTTRADESUMMARY_RESP;
        case 30019: return TRADE_NEWORDER_REQ;
        case 30020: return TRADE_NEWORDER_RESP;
        case 30021: return TRADE_MODIFYORDER_REQ;
        case 30022: return TRADE_MODIFYORDER_RESP;
        case 30023: return TRADE_CANCELORDER_REQ;
        case 30024: return TRADE_CANCELORDER_RESP;
        case 30025: return TRADE_ORDEREXECUTION_REPT;
        case 30027: return TRADE_QUERYEXECUTIONHISTORY_REQ;
        case 30028: return TRADE_QUERYEXECUTIONHISTORY_RESP;
        case 30029: return TRADE_QUERYAVAILABLEEXPIRYDATE_REQ;
        case 30030: return TRADE_QUERYAVAILABLEEXPIRYDATE_RESP;
        case 30031: return TRADE_QUERYORDERCHARGES_REQ;
        case 30032: return TRADE_QUERYORDERCHARGES_RESP;
        case 30033: return TRADE_QUERYAVAILABLEORDERTYPE_REQ;
        case 30034: return TRADE_QUERYAVAILABLEORDERTYPE_RESP;
        case 30035: return TRADE_QUERYBUYORDERMAXQTY_REQ;
        case 30036: return TRADE_QUERYBUYORDERMAXQTY_RESP;
        case 30037: return TRADE_QUERYTRANSACTIONGROUPDATA_REQ;
        case 30038: return TRADE_QUERYTRANSACTIONGROUPDATA_RESP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Event>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Event>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Event>() {
            public Event findValueByNumber(int number) {
              return Event.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Common.getDescriptor().getEnumTypes().get(2);
    }

    private static final Event[] VALUES = values();

    public static Event valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Event(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ruifusoft.protocol.Event)
  }

  public interface StatusInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ruifusoft.protocol.StatusInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .ruifusoft.protocol.Status status = 1;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .ruifusoft.protocol.Status status = 1;</code>
     */
    Status getStatus();

    /**
     * <code>required string msg = 2;</code>
     */
    boolean hasMsg();
    /**
     * <code>required string msg = 2;</code>
     */
    String getMsg();
    /**
     * <code>required string msg = 2;</code>
     */
    com.google.protobuf.ByteString
        getMsgBytes();
  }
  /**
   * Protobuf type {@code ruifusoft.protocol.StatusInfo}
   */
  public static final class StatusInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ruifusoft.protocol.StatusInfo)
      StatusInfoOrBuilder {
    // Use StatusInfo.newBuilder() to construct.
    private StatusInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StatusInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StatusInfo defaultInstance;
    public static StatusInfo getDefaultInstance() {
      return defaultInstance;
    }

    public StatusInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StatusInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              Status value = Status.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              msg_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Common.internal_static_ruifusoft_protocol_StatusInfo_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Common.internal_static_ruifusoft_protocol_StatusInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              StatusInfo.class, Builder.class);
    }

    public static com.google.protobuf.Parser<StatusInfo> PARSER =
        new com.google.protobuf.AbstractParser<StatusInfo>() {
      public StatusInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StatusInfo(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<StatusInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private Status status_;
    /**
     * <code>required .ruifusoft.protocol.Status status = 1;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ruifusoft.protocol.Status status = 1;</code>
     */
    public Status getStatus() {
      return status_;
    }

    public static final int MSG_FIELD_NUMBER = 2;
    private Object msg_;
    /**
     * <code>required string msg = 2;</code>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string msg = 2;</code>
     */
    public String getMsg() {
      Object ref = msg_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string msg = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      Object ref = msg_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      status_ = Status.SUCCESS;
      msg_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsg()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMsgBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMsgBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StatusInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StatusInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StatusInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StatusInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StatusInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StatusInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StatusInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StatusInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StatusInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StatusInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StatusInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ruifusoft.protocol.StatusInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ruifusoft.protocol.StatusInfo)
        StatusInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Common.internal_static_ruifusoft_protocol_StatusInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Common.internal_static_ruifusoft_protocol_StatusInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                StatusInfo.class, Builder.class);
      }

      // Construct using ruifusoft.protocol.Common.StatusInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        status_ = Status.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        msg_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Common.internal_static_ruifusoft_protocol_StatusInfo_descriptor;
      }

      public StatusInfo getDefaultInstanceForType() {
        return StatusInfo.getDefaultInstance();
      }

      public StatusInfo build() {
        StatusInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StatusInfo buildPartial() {
        StatusInfo result = new StatusInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.msg_ = msg_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StatusInfo) {
          return mergeFrom((StatusInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StatusInfo other) {
        if (other == StatusInfo.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasMsg()) {
          bitField0_ |= 0x00000002;
          msg_ = other.msg_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasMsg()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StatusInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StatusInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Status status_ = Status.SUCCESS;
      /**
       * <code>required .ruifusoft.protocol.Status status = 1;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ruifusoft.protocol.Status status = 1;</code>
       */
      public Status getStatus() {
        return status_;
      }
      /**
       * <code>required .ruifusoft.protocol.Status status = 1;</code>
       */
      public Builder setStatus(Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .ruifusoft.protocol.Status status = 1;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = Status.SUCCESS;
        onChanged();
        return this;
      }

      private Object msg_ = "";
      /**
       * <code>required string msg = 2;</code>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string msg = 2;</code>
       */
      public String getMsg() {
        Object ref = msg_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            msg_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string msg = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string msg = 2;</code>
       */
      public Builder setMsg(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string msg = 2;</code>
       */
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x00000002);
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <code>required string msg = 2;</code>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        msg_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ruifusoft.protocol.StatusInfo)
    }

    static {
      defaultInstance = new StatusInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ruifusoft.protocol.StatusInfo)
  }

  public interface DeviceInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ruifusoft.protocol.DeviceInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string device_key = 1;</code>
     *
     * <pre>
     * 唯一标示, 可以为uuid
     * </pre>
     */
    boolean hasDeviceKey();
    /**
     * <code>required string device_key = 1;</code>
     *
     * <pre>
     * 唯一标示, 可以为uuid
     * </pre>
     */
    String getDeviceKey();
    /**
     * <code>required string device_key = 1;</code>
     *
     * <pre>
     * 唯一标示, 可以为uuid
     * </pre>
     */
    com.google.protobuf.ByteString
        getDeviceKeyBytes();

    /**
     * <code>required .ruifusoft.protocol.DeviceType device_type = 2;</code>
     */
    boolean hasDeviceType();
    /**
     * <code>required .ruifusoft.protocol.DeviceType device_type = 2;</code>
     */
    DeviceType getDeviceType();

    /**
     * <code>required int32 version = 3;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required int32 version = 3;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    int getVersion();

    /**
     * <code>optional int32 market_palace = 4;</code>
     *
     * <pre>
     * APP市场
     * </pre>
     */
    boolean hasMarketPalace();
    /**
     * <code>optional int32 market_palace = 4;</code>
     *
     * <pre>
     * APP市场
     * </pre>
     */
    int getMarketPalace();

    /**
     * <code>optional string lang_code = 5;</code>
     *
     * <pre>
     * EN, ZH-HK, ZH-CN
     * </pre>
     */
    boolean hasLangCode();
    /**
     * <code>optional string lang_code = 5;</code>
     *
     * <pre>
     * EN, ZH-HK, ZH-CN
     * </pre>
     */
    String getLangCode();
    /**
     * <code>optional string lang_code = 5;</code>
     *
     * <pre>
     * EN, ZH-HK, ZH-CN
     * </pre>
     */
    com.google.protobuf.ByteString
        getLangCodeBytes();
  }
  /**
   * Protobuf type {@code ruifusoft.protocol.DeviceInfo}
   */
  public static final class DeviceInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ruifusoft.protocol.DeviceInfo)
      DeviceInfoOrBuilder {
    // Use DeviceInfo.newBuilder() to construct.
    private DeviceInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeviceInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeviceInfo defaultInstance;
    public static DeviceInfo getDefaultInstance() {
      return defaultInstance;
    }

    public DeviceInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeviceInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              deviceKey_ = bs;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              DeviceType value = DeviceType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                deviceType_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              version_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              marketPalace_ = input.readInt32();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              langCode_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Common.internal_static_ruifusoft_protocol_DeviceInfo_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Common.internal_static_ruifusoft_protocol_DeviceInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DeviceInfo.class, Builder.class);
    }

    public static com.google.protobuf.Parser<DeviceInfo> PARSER =
        new com.google.protobuf.AbstractParser<DeviceInfo>() {
      public DeviceInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeviceInfo(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<DeviceInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DEVICE_KEY_FIELD_NUMBER = 1;
    private Object deviceKey_;
    /**
     * <code>required string device_key = 1;</code>
     *
     * <pre>
     * 唯一标示, 可以为uuid
     * </pre>
     */
    public boolean hasDeviceKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string device_key = 1;</code>
     *
     * <pre>
     * 唯一标示, 可以为uuid
     * </pre>
     */
    public String getDeviceKey() {
      Object ref = deviceKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deviceKey_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string device_key = 1;</code>
     *
     * <pre>
     * 唯一标示, 可以为uuid
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDeviceKeyBytes() {
      Object ref = deviceKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICE_TYPE_FIELD_NUMBER = 2;
    private DeviceType deviceType_;
    /**
     * <code>required .ruifusoft.protocol.DeviceType device_type = 2;</code>
     */
    public boolean hasDeviceType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .ruifusoft.protocol.DeviceType device_type = 2;</code>
     */
    public DeviceType getDeviceType() {
      return deviceType_;
    }

    public static final int VERSION_FIELD_NUMBER = 3;
    private int version_;
    /**
     * <code>required int32 version = 3;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 version = 3;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    public int getVersion() {
      return version_;
    }

    public static final int MARKET_PALACE_FIELD_NUMBER = 4;
    private int marketPalace_;
    /**
     * <code>optional int32 market_palace = 4;</code>
     *
     * <pre>
     * APP市场
     * </pre>
     */
    public boolean hasMarketPalace() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 market_palace = 4;</code>
     *
     * <pre>
     * APP市场
     * </pre>
     */
    public int getMarketPalace() {
      return marketPalace_;
    }

    public static final int LANG_CODE_FIELD_NUMBER = 5;
    private Object langCode_;
    /**
     * <code>optional string lang_code = 5;</code>
     *
     * <pre>
     * EN, ZH-HK, ZH-CN
     * </pre>
     */
    public boolean hasLangCode() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string lang_code = 5;</code>
     *
     * <pre>
     * EN, ZH-HK, ZH-CN
     * </pre>
     */
    public String getLangCode() {
      Object ref = langCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          langCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string lang_code = 5;</code>
     *
     * <pre>
     * EN, ZH-HK, ZH-CN
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLangCodeBytes() {
      Object ref = langCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        langCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      deviceKey_ = "";
      deviceType_ = DeviceType.ANDROID;
      version_ = 0;
      marketPalace_ = 0;
      langCode_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDeviceKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDeviceType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDeviceKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, deviceType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, version_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, marketPalace_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getLangCodeBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDeviceKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, deviceType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, version_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, marketPalace_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getLangCodeBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static DeviceInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DeviceInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DeviceInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DeviceInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DeviceInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DeviceInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static DeviceInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static DeviceInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static DeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DeviceInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ruifusoft.protocol.DeviceInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ruifusoft.protocol.DeviceInfo)
        DeviceInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Common.internal_static_ruifusoft_protocol_DeviceInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Common.internal_static_ruifusoft_protocol_DeviceInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DeviceInfo.class, Builder.class);
      }

      // Construct using ruifusoft.protocol.Common.DeviceInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deviceKey_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceType_ = DeviceType.ANDROID;
        bitField0_ = (bitField0_ & ~0x00000002);
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        marketPalace_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        langCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Common.internal_static_ruifusoft_protocol_DeviceInfo_descriptor;
      }

      public DeviceInfo getDefaultInstanceForType() {
        return DeviceInfo.getDefaultInstance();
      }

      public DeviceInfo build() {
        DeviceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DeviceInfo buildPartial() {
        DeviceInfo result = new DeviceInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceKey_ = deviceKey_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.deviceType_ = deviceType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.marketPalace_ = marketPalace_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.langCode_ = langCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DeviceInfo) {
          return mergeFrom((DeviceInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(DeviceInfo other) {
        if (other == DeviceInfo.getDefaultInstance()) return this;
        if (other.hasDeviceKey()) {
          bitField0_ |= 0x00000001;
          deviceKey_ = other.deviceKey_;
          onChanged();
        }
        if (other.hasDeviceType()) {
          setDeviceType(other.getDeviceType());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasMarketPalace()) {
          setMarketPalace(other.getMarketPalace());
        }
        if (other.hasLangCode()) {
          bitField0_ |= 0x00000010;
          langCode_ = other.langCode_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDeviceKey()) {
          
          return false;
        }
        if (!hasDeviceType()) {
          
          return false;
        }
        if (!hasVersion()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        DeviceInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (DeviceInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object deviceKey_ = "";
      /**
       * <code>required string device_key = 1;</code>
       *
       * <pre>
       * 唯一标示, 可以为uuid
       * </pre>
       */
      public boolean hasDeviceKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string device_key = 1;</code>
       *
       * <pre>
       * 唯一标示, 可以为uuid
       * </pre>
       */
      public String getDeviceKey() {
        Object ref = deviceKey_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            deviceKey_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string device_key = 1;</code>
       *
       * <pre>
       * 唯一标示, 可以为uuid
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDeviceKeyBytes() {
        Object ref = deviceKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string device_key = 1;</code>
       *
       * <pre>
       * 唯一标示, 可以为uuid
       * </pre>
       */
      public Builder setDeviceKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string device_key = 1;</code>
       *
       * <pre>
       * 唯一标示, 可以为uuid
       * </pre>
       */
      public Builder clearDeviceKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceKey_ = getDefaultInstance().getDeviceKey();
        onChanged();
        return this;
      }
      /**
       * <code>required string device_key = 1;</code>
       *
       * <pre>
       * 唯一标示, 可以为uuid
       * </pre>
       */
      public Builder setDeviceKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceKey_ = value;
        onChanged();
        return this;
      }

      private DeviceType deviceType_ = DeviceType.ANDROID;
      /**
       * <code>required .ruifusoft.protocol.DeviceType device_type = 2;</code>
       */
      public boolean hasDeviceType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .ruifusoft.protocol.DeviceType device_type = 2;</code>
       */
      public DeviceType getDeviceType() {
        return deviceType_;
      }
      /**
       * <code>required .ruifusoft.protocol.DeviceType device_type = 2;</code>
       */
      public Builder setDeviceType(DeviceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        deviceType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .ruifusoft.protocol.DeviceType device_type = 2;</code>
       */
      public Builder clearDeviceType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        deviceType_ = DeviceType.ANDROID;
        onChanged();
        return this;
      }

      private int version_ ;
      /**
       * <code>required int32 version = 3;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 version = 3;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>required int32 version = 3;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000004;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 version = 3;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        version_ = 0;
        onChanged();
        return this;
      }

      private int marketPalace_ ;
      /**
       * <code>optional int32 market_palace = 4;</code>
       *
       * <pre>
       * APP市场
       * </pre>
       */
      public boolean hasMarketPalace() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 market_palace = 4;</code>
       *
       * <pre>
       * APP市场
       * </pre>
       */
      public int getMarketPalace() {
        return marketPalace_;
      }
      /**
       * <code>optional int32 market_palace = 4;</code>
       *
       * <pre>
       * APP市场
       * </pre>
       */
      public Builder setMarketPalace(int value) {
        bitField0_ |= 0x00000008;
        marketPalace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 market_palace = 4;</code>
       *
       * <pre>
       * APP市场
       * </pre>
       */
      public Builder clearMarketPalace() {
        bitField0_ = (bitField0_ & ~0x00000008);
        marketPalace_ = 0;
        onChanged();
        return this;
      }

      private Object langCode_ = "";
      /**
       * <code>optional string lang_code = 5;</code>
       *
       * <pre>
       * EN, ZH-HK, ZH-CN
       * </pre>
       */
      public boolean hasLangCode() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string lang_code = 5;</code>
       *
       * <pre>
       * EN, ZH-HK, ZH-CN
       * </pre>
       */
      public String getLangCode() {
        Object ref = langCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            langCode_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string lang_code = 5;</code>
       *
       * <pre>
       * EN, ZH-HK, ZH-CN
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLangCodeBytes() {
        Object ref = langCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          langCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string lang_code = 5;</code>
       *
       * <pre>
       * EN, ZH-HK, ZH-CN
       * </pre>
       */
      public Builder setLangCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        langCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string lang_code = 5;</code>
       *
       * <pre>
       * EN, ZH-HK, ZH-CN
       * </pre>
       */
      public Builder clearLangCode() {
        bitField0_ = (bitField0_ & ~0x00000010);
        langCode_ = getDefaultInstance().getLangCode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string lang_code = 5;</code>
       *
       * <pre>
       * EN, ZH-HK, ZH-CN
       * </pre>
       */
      public Builder setLangCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        langCode_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ruifusoft.protocol.DeviceInfo)
    }

    static {
      defaultInstance = new DeviceInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ruifusoft.protocol.DeviceInfo)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ruifusoft_protocol_StatusInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ruifusoft_protocol_StatusInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ruifusoft_protocol_DeviceInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ruifusoft_protocol_DeviceInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\014common.proto\022\022ruifusoft.protocol\"E\n\nSt" +
      "atusInfo\022*\n\006status\030\001 \002(\0162\032.ruifusoft.pro" +
      "tocol.Status\022\013\n\003msg\030\002 \002(\t\"\220\001\n\nDeviceInfo" +
      "\022\022\n\ndevice_key\030\001 \002(\t\0223\n\013device_type\030\002 \002(" +
      "\0162\036.ruifusoft.protocol.DeviceType\022\017\n\007ver" +
      "sion\030\003 \002(\005\022\025\n\rmarket_palace\030\004 \001(\005\022\021\n\tlan" +
      "g_code\030\005 \001(\t*\201\003\n\006Status\022\013\n\007SUCCESS\020\000\022\n\n\006" +
      "FAILED\020\001\022\023\n\017INVALID_REQUEST\020\002\022\022\n\016SESSION" +
      "_FAILED\020\003\022\030\n\024DB_CONNECTION_FAILED\020\004\022\022\n\016I" +
      "NTERNAL_ERROR\020\005\022\033\n\026USER_CREATE_DUPLICATE",
      "D\020\221N\022\034\n\027USER_PASSWORD_INCORRECT\020\222N\022\023\n\016US" +
      "ER_NOT_EXIST\020\223N\022\035\n\030USER_INVALID_THIRD_PA" +
      "RTY\020\224N\022\023\n\016USER_NOT_LOGIN\020\225N\022\032\n\024TRADE_SER" +
      "VER_OFFLINE\020\261\352\001\022\"\n\034TRADE_SERVER_INTERNAL" +
      "_FAILED\020\262\352\001\022 \n\032TRADE_SERVER_INVALID_REPL" +
      "Y\020\263\352\001\022!\n\033TRADE_SERVER_SESSION_FAILED\020\264\352\001" +
      "*U\n\nDeviceType\022\013\n\007ANDROID\020\001\022\007\n\003IOS\020\002\022\017\n\013" +
      "IOS_INHOUSE\020\003\022\t\n\005HTML5\020\004\022\007\n\003WEB\020\005\022\014\n\010OTH" +
      "ER_OS\020d*\243\020\n\005Event\022\022\n\016NULL_EVENT_REQ\020\001\022\023\n" +
      "\017NULL_EVENT_RESP\020\002\022\026\n\021USER_REGISTER_REQ\020",
      "\221N\022\027\n\022USER_REGISTER_RESP\020\222N\022\026\n\021USER_ID_Q" +
      "UERY_REQ\020\223N\022\027\n\022USER_ID_QUERY_RESP\020\224N\022\023\n\016" +
      "USER_LOGIN_REQ\020\225N\022\024\n\017USER_LOGIN_RESP\020\226N\022" +
      "\022\n\rUSER_BIND_REQ\020\227N\022\023\n\016USER_BIND_RESP\020\230N" +
      "\022\023\n\016USER_QUERY_REQ\020\231N\022\024\n\017USER_QUERY_RESP" +
      "\020\232N\022\024\n\017USER_UPDATE_REQ\020\233N\022\025\n\020USER_UPDATE" +
      "_RESP\020\234N\022\037\n\032USER_THIRD_PARTY_LOGIN_REQ\020\235" +
      "N\022 \n\033USER_THIRD_PARTY_LOGIN_RESP\020\236N\022\033\n\026U" +
      "SER_SESSION_QUERY_REQ\020\237N\022\034\n\027USER_SESSION" +
      "_QUERY_RESP\020\240N\022\032\n\024MARKET_SECU_STAT_REQ\020\241",
      "\234\001\022\033\n\025MARKET_SECU_STAT_RESP\020\242\234\001\022\036\n\030MARKE" +
      "T_SECU_TIMELINE_REQ\020\243\234\001\022\037\n\031MARKET_SECU_T" +
      "IMELINE_RESP\020\244\234\001\022\033\n\025MARKET_SECU_KLINE_RE" +
      "Q\020\245\234\001\022\034\n\026MARKET_SECU_KLINE_RESP\020\246\234\001\022\037\n\031M" +
      "ARKET_SECU_ORDERBOOK_REQ\020\247\234\001\022 \n\032MARKET_S" +
      "ECU_ORDERBOOK_RESP\020\250\234\001\022\031\n\023TRADE_USERLOGO" +
      "N_REQ\020\261\352\001\022\032\n\024TRADE_USERLOGON_RESP\020\262\352\001\022\032\n" +
      "\024TRADE_USERLOGOUT_REQ\020\263\352\001\022\033\n\025TRADE_USERL" +
      "OGOUT_RESP\020\264\352\001\022#\n\035TRADE_QUERYACCOUNTDETA" +
      "ILS_REQ\020\265\352\001\022$\n\036TRADE_QUERYACCOUNTDETAILS",
      "_RESP\020\266\352\001\022(\n\"TRADE_QUERYACCOUNTBUYORDERI" +
      "NFO_REQ\020\267\352\001\022)\n#TRADE_QUERYACCOUNTBUYORDE" +
      "RINFO_RESP\020\270\352\001\022\'\n!TRADE_QUERYACCOUNTCASH" +
      "BALANCE_REQ\020\271\352\001\022(\n\"TRADE_QUERYACCOUNTCAS" +
      "HBALANCE_RESP\020\272\352\001\022-\n\'TRADE_QUERYACCOUNTS" +
      "ECURITIESBALANCE_REQ\020\273\352\001\022.\n(TRADE_QUERYA" +
      "CCOUNTSECURITIESBALANCE_RESP\020\274\352\001\022(\n\"TRAD" +
      "E_QUERYACCOUNTORDERHISTORY_REQ\020\275\352\001\022)\n#TR" +
      "ADE_QUERYACCOUNTORDERHISTORY_RESP\020\276\352\001\022)\n" +
      "#TRADE_QUERYACCOUNTORDEROVERVIEW_REQ\020\277\352\001",
      "\022*\n$TRADE_QUERYACCOUNTORDEROVERVIEW_RESP" +
      "\020\300\352\001\022(\n\"TRADE_QUERYACCOUNTTRADESUMMARY_R" +
      "EQ\020\301\352\001\022)\n#TRADE_QUERYACCOUNTTRADESUMMARY" +
      "_RESP\020\302\352\001\022\030\n\022TRADE_NEWORDER_REQ\020\303\352\001\022\031\n\023T" +
      "RADE_NEWORDER_RESP\020\304\352\001\022\033\n\025TRADE_MODIFYOR" +
      "DER_REQ\020\305\352\001\022\034\n\026TRADE_MODIFYORDER_RESP\020\306\352" +
      "\001\022\033\n\025TRADE_CANCELORDER_REQ\020\307\352\001\022\034\n\026TRADE_" +
      "CANCELORDER_RESP\020\310\352\001\022\037\n\031TRADE_ORDEREXECU" +
      "TION_REPT\020\311\352\001\022%\n\037TRADE_QUERYEXECUTIONHIS" +
      "TORY_REQ\020\313\352\001\022&\n TRADE_QUERYEXECUTIONHIST",
      "ORY_RESP\020\314\352\001\022(\n\"TRADE_QUERYAVAILABLEEXPI" +
      "RYDATE_REQ\020\315\352\001\022)\n#TRADE_QUERYAVAILABLEEX" +
      "PIRYDATE_RESP\020\316\352\001\022!\n\033TRADE_QUERYORDERCHA" +
      "RGES_REQ\020\317\352\001\022\"\n\034TRADE_QUERYORDERCHARGES_" +
      "RESP\020\320\352\001\022\'\n!TRADE_QUERYAVAILABLEORDERTYP" +
      "E_REQ\020\321\352\001\022(\n\"TRADE_QUERYAVAILABLEORDERTY" +
      "PE_RESP\020\322\352\001\022#\n\035TRADE_QUERYBUYORDERMAXQTY" +
      "_REQ\020\323\352\001\022$\n\036TRADE_QUERYBUYORDERMAXQTY_RE" +
      "SP\020\324\352\001\022)\n#TRADE_QUERYTRANSACTIONGROUPDAT" +
      "A_REQ\020\325\352\001\022*\n$TRADE_QUERYTRANSACTIONGROUP",
      "DATA_RESP\020\326\352\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_ruifusoft_protocol_StatusInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ruifusoft_protocol_StatusInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ruifusoft_protocol_StatusInfo_descriptor,
        new String[] { "Status", "Msg", });
    internal_static_ruifusoft_protocol_DeviceInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ruifusoft_protocol_DeviceInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ruifusoft_protocol_DeviceInfo_descriptor,
        new String[] { "DeviceKey", "DeviceType", "Version", "MarketPalace", "LangCode", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
